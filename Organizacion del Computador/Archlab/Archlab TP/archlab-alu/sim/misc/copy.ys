#Execution begins at 0 
			.pos 0
init: 		irmovq Stack, %rsp	 	# set up pointer to stack
			irmovq Stack, %ebp 	# set up base pointer 
			call Main 		# execute main 
			halt 			# end program 

			.align 4
# Source block
src:		
			.quad 0x001
			.quad 0x002
			.quad 0x004

#Destination block
dest:		
			.quad 0x111
			.quad 0x222
			.quad 0x333

Main: 		pushq %rbp 
			rrmovq %rsp,%rbp
			irmovq $3,%rax
			pushq %rax		#push 3
			irmovq dest,%rax
			pushq %rax 		#push dest
			irmovq src,%rax
			pushq %rax		#push src
			call copy_block		# copy_block(src, dest, 3) 
			rrmovq %rbp,%rsp
			popq %rbp
			ret

# int copy_block(int *src, int *dest, int len)
copy_block: pushq %rbp 
			rrmovq %rsp,%rbp
			mrmovq 8(%rbp),%rdx 	#%rdx = src
			mrmovq 12(%rbp),%rcx	#%rcx = dest
			mrmovq 16(%rbp),%rbx	#%rbx = 3
			xorq %rax,%rax		#%rax = 0
			andq %rbx,%rbx		#test %rbx
			je End
Loop:		mrmovq (%rdx),%rsi
			rmmovq %rsi,(%rcx)
			xorq %rsi,%rax 		#%rax ^= esi
			irmovq $4,%rsi
			addq %rsi,%rdx 		#%rdx -= 4
			addq %rsi,%rcx 		#%rcx -= 4
			irmovq $-1,%rsi
			addq %rsi,%rbx		#%rbx--
			jne Loop
End: 		rrmovq %ebp,%rsp
			popq %rbp
			ret

			.pos 0x100
Stack:
